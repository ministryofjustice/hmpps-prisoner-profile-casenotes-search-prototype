version: '3.1'
services:

#  hmpps-auth:
#    image: quay.io/hmpps/hmpps-auth:latest
#    networks:
#      - hmpps
#    container_name: hmpps-auth
#    ports:
#      - "9090:8080"
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
#    environment:
#      - SPRING_PROFILES_ACTIVE=dev
#      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0
#
#  app:
#    build:
#      context: .
#      args:
#        BUILD_NUMBER: "1.0.0"
#        GIT_REF: "a1b2c3"
#        GIT_BRANCH: main
#    networks:
#      - hmpps
#    ports:
#      - "3000:3000"
#    environment:
#      - PRODUCT_ID=UNASSIGNED
#      - REDIS_ENABLED=false
#      - HMPPS_AUTH_EXTERNAL_URL=http://localhost:9090/auth
#      - HMPPS_AUTH_URL=http://hmpps-auth:8080/auth
#      # These will need to match new creds in the seed auth service auth
#      - API_CLIENT_ID=client-id
#      - API_CLIENT_SECRET=client-secret
#      - SYSTEM_CLIENT_ID=system-client-id
#      - SYSTEM_CLIENT_SECRET=system-client-secret
#      - SESSION_SECRET=somesecretvalue
#      - TOKEN_VERIFICATION_API_URL=http://hmpps-auth:8080/auth
#      - TOKEN_VERIFICATION_ENABLED=false
#      - INGRESS_URL=http://localhost:3000

  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net

  opensearch-node2:
    image: opensearchproject/opensearch:latest # This should be the same image used for opensearch-node1 to avoid issues
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - opensearch-net

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - opensearch-net

volumes:
  opensearch-data1:
  opensearch-data2:

networks:
  opensearch-net:
